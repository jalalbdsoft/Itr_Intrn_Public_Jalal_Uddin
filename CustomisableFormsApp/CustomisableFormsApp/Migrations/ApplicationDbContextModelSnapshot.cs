// <auto-generated />
using System;
using CustomisableFormsApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomisableFormsApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomisableFormsApp.Models.Template", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CUSTOM_STRING10_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING10_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING11_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING11_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING12_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING12_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING13_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING13_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING14_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING14_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING15_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING15_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING16_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING16_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING17_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING17_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING18_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING18_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING19_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING19_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING1_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING1_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING20_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING20_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING21_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING21_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING22_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING22_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING23_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING23_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING24_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING24_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING25_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING25_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING26_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING26_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING27_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING27_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING28_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING28_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING29_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING29_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING2_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING2_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING30_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING30_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING31_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING31_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING32_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING32_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING33_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING33_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING34_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING34_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING35_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING35_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING36_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING36_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING37_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING37_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING38_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING38_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING39_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING39_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING3_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING3_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING40_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING40_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING41_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING41_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING42_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING42_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING43_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING43_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING44_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING44_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING45_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING45_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING46_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING46_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING47_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING47_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING48_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING48_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING49_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING49_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING4_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING4_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING50_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING50_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING5_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING5_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING6_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING6_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING7_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING7_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING8_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING8_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING9_ANSWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOM_STRING9_QUESTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USER_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("USER_ID_CANDIDATE")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("USER_ID");

                    b.HasIndex("USER_ID_CANDIDATE");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CustomisableFormsApp.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("DateTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("CustomisableFormsApp.Models.Template", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("USER_ID");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User_CANDIDATE")
                        .WithMany()
                        .HasForeignKey("USER_ID_CANDIDATE");

                    b.Navigation("User");

                    b.Navigation("User_CANDIDATE");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
